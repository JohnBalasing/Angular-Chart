{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, HostListener } from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.lineChartData = [{\n      data: [0, 1039, 200, 8001, 2026, 1900, 508, 980, 1801, 4256, 3255, 7010],\n      label: 'Paused Vehicle'\n    }];\n    this.lineChartLabels = ['January 2020', 'February 2020', 'March 2020', 'April 2020', 'June 2020', 'July 2020', 'August 2020', 'September 2020', 'October 2020', 'november 2020', 'December 2020'];\n    this.lineChartOptions = {\n      responsive: true,\n      maintainAspectRatio: true,\n      scales: {\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Total Price'\n          },\n          ticks: {\n            // maxTicksLimit: 4,\n            fontStyle: 'normal',\n            fontSize: 13,\n            beginAtZero: false,\n            callback: value => {\n              return `$${value.toLocaleString()}`;\n            } // callback: ( value ) => {\n            //   return this.numberPipe.transform(value);\n            // },\n\n          },\n          gridLines: {\n            drawOnChartArea: false // color: '#676A6C',\n\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            fontStyle: 'normal',\n            fontSize: 13,\n            autoSkip: false,\n            maxRotation: window.innerWidth < 1100 ? 90 : 0,\n            minRotation: window.innerWidth < 1100 ? 90 : 0\n          },\n          gridLines: {\n            drawOnChartArea: false,\n            // color: '#676A6C',\n            lineWidth: 1.5\n          }\n        }]\n      },\n      hover: {\n        mode: 'nearest',\n        intersect: true\n      }\n    };\n    this.lineChartColors = [{\n      backgroundColor: 'blue',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }];\n    this.lineChartLegend = true;\n    this.lineChartType = 'line'; // drag and drop starts here\n\n    this.todo = ['house.png', 'fa-house-chimney', 'fa-graduation-cap', 'fa-bag-shopping', 'fa-jet-fighter-up', 'fa-solid fa-car', 'fa-square-star', 'fa-person', 'fa-face-grin', 'fa-table-cells-large'];\n  }\n  /**\r\n   * Listen for Window Resizing\r\n   */\n\n\n  onResize() {\n    this.settChartAspectRatio();\n  }\n\n  ngOnInit() {\n    this.settChartAspectRatio();\n  }\n  /*\r\n  * sets the charts aspect ratio based on the width of the window\r\n  * */\n\n\n  settChartAspectRatio() {\n    let aspectRatio;\n\n    if (window.innerWidth < 1600 && window.innerWidth > 767) {\n      aspectRatio = 2;\n    }\n\n    if (window.innerWidth < 768) {\n      aspectRatio = 1.5;\n    }\n\n    if (window.innerWidth > 1600) {\n      aspectRatio = 3.5;\n    }\n\n    this.lineChartOptions.aspectRatio = aspectRatio;\n    this.chart.chart.aspectRatio = aspectRatio;\n    this.chart.chart.options.scales.xAxes[0].ticks.maxRotation = window.innerWidth < 1100 ? 90 : 0;\n    this.chart.chart.options.scales.xAxes[0].ticks.minRotation = window.innerWidth < 1100 ? 90 : 0;\n  }\n\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n\n};\n\n__decorate([ViewChild(BaseChartDirective, {\n  static: true\n})], AppComponent.prototype, \"chart\", void 0);\n\n__decorate([HostListener('window:resize', ['$event'])], AppComponent.prototype, \"onResize\", null);\n\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}